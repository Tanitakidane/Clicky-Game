{"version":3,"sources":["logo.svg","components/MyGridcolumn.js","components/MyGrid.js","components/MySegment.js","components/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","MyGridcolumn","Grid","Column","id","this","props","image","style","marginTop","cursor","onClick","changescore","Image","src","url","Component","MyGrid","Row","columns","imagedata","map","ele","index","key","changeScore","MySegment","Header","as","attached","Segment","Navbar","Menu","Item","text","score","topscore","App","shuffle","array","sort","Math","random","useState","lastid","data","setscore","_images","Container","margin","Divider","prevState","includes","Boolean","window","location","hostname","match","styleLink","document","createElement","rel","href","head","appendChild","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.af520d79.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react'\nimport { Grid, Image } from 'semantic-ui-react'\nexport default class MyGridcolumn extends Component {\n\n\n    \n\n\n    render() {\n        return (\n            <Grid.Column id={this.props.image.id} style={{ marginTop: 10,cursor:\"pointer\" }} onClick={()=>this.props.changescore(this.props.image.id)}>\n            <Image src={this.props.image.url} />\n          </Grid.Column>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Grid,Divider} from 'semantic-ui-react'\nimport MyGridcolumn from './MyGridcolumn'\n\nexport default class MyGrid extends Component {\n    render() {\n        return (\n            <Grid>\n                 <Grid.Row columns={4}>\n                     {this.props.imagedata.map((ele,index)=>{\n                     \n\n                   \n                      return <MyGridcolumn key={index} image={ele} changescore={this.props.changeScore}/>\n                    \n\n                    \n\n    })}\n\n\n\n</Grid.Row>\n                \n            </Grid>\n           \n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Button, Header, Icon, Segment } from 'semantic-ui-react'\n\nexport default class MySegment extends Component {\n    render() {\n        return (\n            <>\n            <Header as='h2' attached='top'>\n            Clicky Game!\n            </Header>\n            <Segment attached>\n            Click on an image to earn points, but don't click on any more than once!\n            </Segment>\n          </>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Menu } from 'semantic-ui-react'\n\nexport default class Navbar extends Component {\n    render() {\n        return (\n            <Menu>\n            <Menu.Item\n             \n            \n            >\n              Clicky Game\n            </Menu.Item>\n    \n            <Menu.Item\n           \n            \n            >\n             {this.props.text}\n            </Menu.Item>\n    \n            <Menu.Item\n              \n             \n            >\n             Score: {this.props.score} | Top Score: {this.props.topscore}\n            </Menu.Item>\n          </Menu>\n        )\n    }\n}\n","import React,{useState} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Grid from './components/MyGrid';\nimport MyGrid from './components/MyGrid';\nimport { Container, Header, List } from \"semantic-ui-react\";\nimport MySegment from './components/MySegment';\n\nimport { Divider } from 'semantic-ui-react'\nimport Navbar from './components/Navbar';\nfunction App() {\nlet images=[\n\n{\n  id:1,\n  url:\"https://i.pinimg.com/236x/94/48/31/9448314add914df1237d538394bfa6d2.jpg\"\n},\n{\n  id:2,\n  url:\"https://i.pinimg.com/236x/6b/e2/46/6be246121be8548270ca52a4dd8d5549.jpg\"\n},\n{\n  id:3,\n  url:\"https://i.pinimg.com/236x/95/f1/d3/95f1d3ffffa79f5838583eff81ff5589.jpg\"\n},\n{\n  id:4,\n  url:\"https://i.pinimg.com/236x/46/7e/db/467edb818bc862ef7f54dece5df4d762.jpg\"\n},\n{\n  id:5,\n  url:\"https://i.pinimg.com/236x/63/19/ad/6319ad8ff58e097ef0491c45ffc2f33f.jpg\"\n},\n\n{\n  id:6,\n  url:\"https://i.pinimg.com/236x/68/be/c5/68bec57a36777ac9e0edb59d28f9db32.jpg\"\n},\n{\n  id:7,\n  url:\"https://i.pinimg.com/236x/0b/d5/bd/0bd5bd56702f4e6984fc0ad1545d4a8a.jpg\"\n},\n{\n  id:8,\n  url:\"https://i.pinimg.com/236x/0d/f3/16/0df31648ea982020f9908c7464d9fc55.jpg\"\n},\n{\n  id:9,\n  url:\"https://i.pinimg.com/236x/40/d6/79/40d6796cb72077e96bf144430c03717c.jpg\"\n},\n{\n  id:10,\n  url:\"https://i.pinimg.com/236x/c6/19/a0/c619a06b4bc8c62281a2f8b5c33ff078.jpg\"\n},\n{\n  id:11,\n  url:\"https://i.pinimg.com/236x/a0/5c/5a/a05c5a499c6f2901c65f3b91e8c95c60.jpg\"\n},\n{\n  id:12,\n  url:\"https://i.pinimg.com/236x/26/b2/3a/26b23a69052d937f03659b7618ed8056.jpg\"\n}\n\n\n\n]\n\n\n\nfunction shuffle(array) {\n  return array.sort(() => Math.random() - 0.5);\n}\n\nconst [data, setscore] = useState({score:0,topscore:0,lastid:[],imagedata:images,text:\"Click an image to begin!\"});\nconst score=data.score;\nconst topscore=data.topscore;\nconst _images=data.imagedata;\nconst text=data.text;\n\n\n\nconst changeScore=(id)=>{\n  \n\n\n  setscore(prevState=>{\n    if(prevState.lastid.includes(id))\n    {\n      // reshuffle the element \n      return {score:0,topscore:prevState.topscore,lastid:[],imagedata:shuffle(prevState.imagedata),text:\"You guessed incorrectly!\"}\n    }\n\n\n    return {score:prevState.score+1,topscore:prevState.topscore+1,lastid:[...prevState.lastid,id],imagedata:shuffle(prevState.imagedata),text:\"You guessed correctly!\"}\n  })\n}\n\n\n  return (\n    <>\n    <Navbar score={score} topscore={topscore} text={text}/>\n    <Container style={{ margin: 20 }}>\n      <MySegment/>\n      <Divider />\n     <MyGrid imagedata={_images} changeScore={changeScore}/>\n    </Container>\n</>\n   \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// TODO: Switch to https://github.com/palmerhq/the-platform#stylesheet when it will be stable\nconst styleLink = document.createElement(\"link\");\nstyleLink.rel = \"stylesheet\";\nstyleLink.href = \"https://cdn.jsdelivr.net/npm/semantic-ui/dist/semantic.min.css\";\ndocument.head.appendChild(styleLink);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}